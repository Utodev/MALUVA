MALUVA es un módulo para DAAD (un EXTERN) que facilita distintas funciones que en general dependen del uso de una unidad de almacenamiento rápida (disco, cartucho, etc.)

MODO DE USO
===========

Maluva soporta distintas funciones, que dependen de la plataforma de destino. El objetivo es tener disponible MALUVA para ZX Spectrum (disco +3), ZX Spectrum (ESXDOS), Amstrad CPC (disco), Amstrad CPC (M4) y MSX (cartucho). Por el momento solo está disponible para ZX Spectrum (ESXDOS) y en estado de alfa, por lo que algunas cosas podrían cambiar.

INCLUSION EN EL CÓDIGO FUENTE
=============================

Para incluir MALUVA en el código fuente de DAAD debe hacerse incluyendo la directiva #extern junto con el nombre del fichero BIN de la distribución de Maluva que corresponda a la plataforma a generar, en la sección /CTL del SCE por ejemplo para ESXDOS:

/CTL    ;Sección de control
#extern MLV_ESX.BIN

Es importante, absolutamente necesario, que se coloque como lo primero que haya en esa sección, sin nada por delante.

FUNCIONES POR PLATAFORMA
========================

Las llamadas a MALUVA se hacen mediante el condacto EXTERN, que tiene dos parámetros. Usaremos el segundo para indicar la función y el primero si es necesario para indicarle a la función en concreto un parámetro adicional.

Así una llamade EXTERN sería así:

EXTERN <parámetro adicional> <número de función> 

Si una función no necesitara parámetro adicional hay que ponerlo de todos modos (se puede poner un 0 mismamente). 

Algunos autores que sepan programar se preguntarán por qué esto va así y no al reves (primero la función y luego el parámetro), la respuesta es que DAAD permite indirección solo en el primer parámetro, y como se verá más adelante para algunos usos disponer de indirección es esencial.

ESXDOS
------

Para ESXDOS, debéis generar un fichero .TAP como si fuérais a generar para cinta. Después basta con colocar ese .TAP en la misma carpeta que los gráficos.


= Función 0 : Cargar Gráfico Raster =

Esta función carga un gráfico raster sin comprimir de una altura variable en la pantalla. Los gráficos raster son generados por la herramienta SC2DRG que está incluida en MALUVA.

Parámetros: se pasará como segundo parámetro el número de gráfico a cargar, por ejemplo "EXTERN 12 0" cargará el gráfico 012.DRG, y "EXTERN [Player] 0" cargará el gráfico de la localidad donde está el jugador. Esta última llamada es especialmente útil para reemplazar en el fichero SCE la llamada "PICTURE [Player]" y así hacer que los gráficos vectoriales no salgan y en su lugar salgan los raster.

= Función 1: Grabar partida 

Esta función tiene un parámetro adicional irrelevante (poner cualquier cosa), y permite grabar la partida en disco. Se llamaría con "EXTERN 0 1" y lo ideal es sustituir en nuestro fichero SCE el condacto SAVE por la misma. Si por cualquier razón no puede escribir el fichero (por ejemplo que el disco esté lleno o que se haya retirado el mismo) mostrará el mensaje del sistema 57 (error de E/S).

= Función 2: Cargar partida

Esta función tiene un parámetro adicional irrelevante (poner cualquier cosa), y permite cargar la partida desde disco. Se llamaría con "EXTERN 0 2" y lo ideal es sustituir en nuestro fichero SCE el condacto LOAD por la misma. Si por cualquier razón no puede leer el fichero (por ejemplo que no exista o que se haya retirado el disco) mostrará el mensaje del sistema 57 (error de E/S).


+3DOS
------

[Pendiente]

CPC
---

[Pendiente]

MSX
---

[Pendiente]


SC2DRG
======

SC2DRG es un conversor pensado para convertir de distintos tipos de gráfico de ordenadores de 8 bit, a un formato llamado DRG que está pensado para ser cargado fácil desde cada plataforma. En si el formato DRG (DAAD Raster Graphic) es simplemente un fichero que contiene un primer byte que indica el número de filas de pixels que tiene la imagen, seguido de los datos de la imagen. Los datos de la imagen varian totalmente dependiendo de la plataforma.

SC2DRG ahora mismo solo convierte de .SCR de Spectrum a .DRG para Spectrum, pero la intención es convertir .SCR de Amstrad y .SC2 de MSX en el futuro.

En la distribución en Github está el ejecutable para Windows, pero para compilar SC2DRG solo necesitáis instalar freepascal (fpc) o Lazarus, y ejecutar "fpc SC2DRG.PAS".